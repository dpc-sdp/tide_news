<?php

/**
 * @file
 * Tide News module install file..
 */

use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 */
function tide_news_install() {
  // Enable entity type/bundles for use with scheduled transitions.
  if (\Drupal::moduleHandler()->moduleExists('scheduled_transitions')) {
    $config_factory = \Drupal::configFactory();
    $config = $config_factory->getEditable('scheduled_transitions.settings');
    $bundles = $config->get('bundles');
    if ($bundles) {
      foreach ($bundles as $bundle) {
        $enabled_bundles = [];
        $enabled_bundles[] = $bundle['bundle'];
      }
      if (!in_array('news', $enabled_bundles)) {
        $bundles[] = ['entity_type' => 'node', 'bundle' => 'news'];
        $config->set('bundles', $bundles)->save();
      }
    }
    else {
      $bundles[] = ['entity_type' => 'node', 'bundle' => 'news'];
      $config->set('bundles', $bundles)->save();
    }
  }
}

/**
 * Assign necessary permissions .
 */
function _tide_alert_assign_necessary_permissions() {
  $role_permissions = [
    'editor' => [
      'create news content',
      'clone news content',
      'edit any news content',
      'edit own news content',
      'revert news revisions',
      'view news revisions',
    ],
    'site_admin' => [
      'add scheduled transitions node news',
      'create news content',
      'clone news content',
      'delete any news content',
      'delete news revisions',
      'delete own news content',
      'edit any news content',
      'edit own news content',
      'revert news revisions',
      'view news revisions',
      'view scheduled transitions node news',
    ],
    'approver' => [
      'add scheduled transitions node news',
      'create news content',
      'delete any news content',
      'delete news revisions',
      'delete own news content',
      'edit any news content',
      'edit own news content',
      'revert news revisions',
      'view news revisions',
      'view scheduled transitions node news',
    ],
    'contributer' => [
      'create news content',
      'clone news content',
      'delete any news content',
      'delete news revisions',
      'delete own news content',
      'edit any news content',
      'edit own news content',
      'revert news revisions',
      'view news revisions',
    ],
  ];

  foreach ($role_permissions as $role => $permissions) {
    if (Role::load($role) && !is_null(Role::load($role))) {
      user_role_grant_permissions(Role::load($role)->id(), $permissions);
    }
  }

}
