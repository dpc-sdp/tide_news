<?php

/**
 * @file
 * Tide News module install file..
 */

use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\node\Entity\Node;

/**
 * Implements hook_install().
 */
function tide_news_install() {
  // Enable entity type/bundles for use with scheduled transitions.
  if (\Drupal::moduleHandler()->moduleExists('scheduled_transitions')) {
    $config_factory = \Drupal::configFactory();
    $config = $config_factory->getEditable('scheduled_transitions.settings');
    $bundles = $config->get('bundles');
    if ($bundles) {
      foreach ($bundles as $bundle) {
        $enabled_bundles[] = $bundle['bundle'];
      }
      if (!in_array('news', $enabled_bundles)) {
        $bundles[] = ['entity_type' => 'node', 'bundle' => 'news'];
        $config->set('bundles', $bundles)->save();
      }
    }
    else {
      $bundles[] = ['entity_type' => 'node', 'bundle' => 'news'];
      $config->set('bundles', $bundles)->save();
    }
  }
}

/**
 * Enable entity type/bundles for use with scheduled transitions.
 */
function tide_news_update_8001() {
  if (\Drupal::moduleHandler()->moduleExists('scheduled_transitions')) {
    $config_factory = \Drupal::configFactory();
    $config = $config_factory->getEditable('scheduled_transitions.settings');
    $bundles = $config->get('bundles');
    if ($bundles) {
      foreach ($bundles as $bundle) {
        $enabled_bundles[] = $bundle['bundle'];
      }
      if (!in_array('news', $enabled_bundles)) {
        $bundles[] = ['entity_type' => 'node', 'bundle' => 'news'];
        $config->set('bundles', $bundles)->save();
      }
    }
    else {
      $bundles[] = ['entity_type' => 'node', 'bundle' => 'news'];
      $config->set('bundles', $bundles)->save();
    }
  }
}

/**
 * Add Summary field.
 */
function tide_news_update_8002() {
  $field_name = 'field_landing_page_summary';
  if (!FieldStorageConfig::loadByName('node', $field_name)) {
    return;
  }

  if (FieldConfig::loadByName('node', 'news', $field_name)) {
    return;
  }

  /** @var \Drupal\Core\Field\FieldConfigInterface $field_config */
  $field_config = FieldConfig::create([
    'field_name' => $field_name,
    'type' => 'string_long',
    'entity_type' => 'node',
    'bundle' => 'news',
    'label' => 'Summary',
    'description' => 'This is the meta description that appears in Google search results. Recommended length <156 characters. Use keywords.',
    'required' => TRUE,
    'default_value' => [],
  ]);
  module_load_include('inc', 'tide_core', 'includes/helpers');
  $uuid = _tide_retrieve_config_uuid($field_config->getConfigDependencyName());
  if ($uuid) {
    $field_config->set('uuid', $uuid);
  }
  $field_config->save();

  if ($field_config && !$field_config->isNew()) {
    $form_display = EntityFormDisplay::load('node.news.default');
    if ($form_display) {
      $form_display->setComponent($field_name, [
        'weight' => 8,
        'settings' => [
          'rows' => 5,
          'placeholder' => '',
        ],
        'third_party_settings' => [
          'maxlength' => [
            'maxlength_js' => 200,
            'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
            'maxlength_js_enforce' => FALSE,
            'maxlength_js_truncate_html' => FALSE,
          ],
        ],
        'type' => 'string_textarea',
        'region' => 'content',
      ])->save();
    }
  }
}

/**
 * Migrate body summary to the new Summary field.
 */
function tide_news_update_8003(&$sandbox) {
  if (!isset($sandbox['total'])) {
    $count = \Drupal::entityQuery('node')
      ->condition('type', 'news')
      ->exists('body.summary')
      ->count()
      ->execute();
    $sandbox['total'] = $count;
    $sandbox['current'] = 0;
    $sandbox['processed'] = 0;
    $sandbox['#finished'] = $count ? 0 : 1;
  }

  $batch_size = 10;
  $nids = \Drupal::entityQuery('node')
    ->condition('type', 'news')
    ->condition('nid', $sandbox['current'], '>')
    ->exists('body.summary')
    ->sort('nid', 'ASC')
    ->range(0, $batch_size)
    ->execute();
  foreach ($nids as $nid) {
    $sandbox['current'] = $nid;
    try {
      /** @var \Drupal\node\NodeInterface $node */
      $node = Node::load($nid);
      if ($node) {
        $body = $node->get('body')->getValue();
        foreach ($body as $delta => &$value) {
          $node->set('field_landing_page_summary', $value['summary']);
          $value['summary'] = NULL;
        }
        $node->set('body', $body);
        $node->setNewRevision(FALSE);
        $node->save();
      }
    }
    catch (Exception $exception) {
      watchdog_exception('tide_news', $exception);
    }
    $sandbox['processed']++;
  }
  $sandbox['#finished'] = $sandbox['total'] ? ($sandbox['processed'] / $sandbox['total']) : 1;
}

/**
 * Add Contact us field.
 */
function tide_news_update_8004() {
  module_load_include('inc', 'tide_core', 'includes/helpers');

  $form_display = EntityFormDisplay::load('node.news.default');
  if (!$form_display) {
    return;
  }

  $field_name = 'field_landing_page_show_contact';
  if (FieldStorageConfig::loadByName('node', $field_name)) {
    if (!FieldConfig::loadByName('node', 'news', $field_name)) {
      /** @var \Drupal\Core\Field\FieldConfigInterface $field_config */
      $field_config = FieldConfig::create([
        'field_name' => $field_name,
        'field_type' => 'boolean',
        'entity_type' => 'node',
        'bundle' => 'news',
        'label' => 'Show contact details',
        'description' => '',
        'required' => FALSE,
        'default_value' => [['value' => 0]],
      ]);
      $uuid = _tide_retrieve_config_uuid($field_config->getConfigDependencyName());
      if ($uuid) {
        $field_config->set('uuid', $uuid);
      }
      $field_config->save();

      if ($field_config && !$field_config->isNew()) {
        $form_display->setComponent($field_name, [
          'weight' => 18,
          'settings' => [
            'display_label' => TRUE,
          ],
          'third_party_settings' => [],
          'type' => 'boolean_checkbox',
          'region' => 'content',
        ]);
      }
    }
  }

  $field_name = 'field_landing_page_contact';
  if (FieldStorageConfig::loadByName('node', $field_name)) {
    if (!FieldConfig::loadByName('node', 'news', $field_name)) {
      /** @var \Drupal\Core\Field\FieldConfigInterface $field_config */
      $field_config = FieldConfig::create([
        'field_name' => $field_name,
        'field_type' => 'entity_reference_revisions',
        'entity_type' => 'node',
        'bundle' => 'news',
        'label' => 'Contact us',
        'description' => '',
        'required' => FALSE,
        'default_value' => [],
        'settings' => [
          'handler' => 'default:paragraph',
          'handler_settings' => [
            'negate' => 0,
            'target_bundles' => ['contact_us' => 'contact_us'],
            'target_bundles_drag_drop' => [
              'contact_us' => [
                'enabled' => TRUE,
                'weight' => 0,
              ],
            ],
          ],
        ],
      ]);
      $uuid = _tide_retrieve_config_uuid($field_config->getConfigDependencyName());
      if ($uuid) {
        $field_config->set('uuid', $uuid);
      }
      $field_config->save();

      if ($field_config && !$field_config->isNew()) {
        $form_display->setComponent($field_name, [
          'weight' => 19,
          'settings' => [
            'title' => 'Contact Us block',
            'title_plural' => 'Contact Us blocks',
            'edit_mode' => 'closed',
            'add_mode' => 'button',
            'form_display_mode' => 'default',
            'default_paragraph_type' => '_none',
          ],
          'third_party_settings' => [],
          'type' => 'entity_reference_paragraphs',
          'region' => 'content',
        ]);
      }
    }
  }

  $form_display->save();
}

/**
 * Create a new field group.
 *
 * @param string $label
 *   The label.
 * @param string $type
 *   The format type (tabs, tab, etc.).
 * @param array $settings
 *   The format settings.
 * @param string $region
 *   The form region.
 * @param int $weight
 *   The weight.
 * @param string $parent
 *   The parent name.
 * @param array $children
 *   The list of child components.
 *
 * @return array
 *   The field group array.
 */
function _tide_news_new_field_group(string $label, string $type, array $settings, string $region = 'content', int $weight = 0, string $parent = '', array $children = []) : array {
  return [
    'label' => $label,
    'parent_name' => $parent,
    'children' => $children,
    'format_type' => $type,
    'format_settings' => $settings,
    'region' => $region,
    'weight' => $weight,
  ];
}

/**
 * Create a new tabs field group.
 *
 * @param string $label
 *   The label.
 * @param string $direction
 *   The tabs direction (horizontal or vertical).
 * @param string $id
 *   The CSS ID.
 * @param string $classes
 *   The CSS classes.
 * @param string $region
 *   The form region.
 * @param int $weight
 *   The form weight.
 * @param string $parent
 *   The parent name.
 * @param array $children
 *   The list of child components.
 *
 * @return array
 *   The field group array.
 */
function _tide_news_new_field_group_tabs(string $label, string $direction = 'horizontal', string $id = '', string $classes = '', string $region = 'content', int $weight = 0, string $parent = '', array $children = []) : array {
  return _tide_news_new_field_group($label, 'tabs', [
    'direction' => $direction,
    'id' => $id,
    'classes' => $classes,
  ], $region, $weight, $parent, $children);
}

/**
 * Create a new tab field group.
 *
 * @param string $label
 *   The label.
 * @param string $parent
 *   The parent name.
 * @param array $settings
 *   The format settings.
 * @param string $region
 *   The form region.
 * @param int $weight
 *   The form weight.
 * @param array $children
 *   The list of child components.
 *
 * @return array
 *   The field group array.
 */
function _tide_news_new_field_group_tab(string $label, string $parent, array $settings = [], string $region = 'content', int $weight = 0, array $children = []) : array {
  return _tide_news_new_field_group($label, 'tab', [
    'description' => '',
    'formatter' => 'closed',
    'required_fields' => TRUE,
    'id' => '',
    'classes' => '',
  ] + $settings, $region, $weight, $parent, $children);
}

/**
 * Update node form for News content type.
 */
function tide_news_update_8005() {
  // Install Select2 module as it is a new dependency.
  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
  $installer = \Drupal::service('module_installer');
  $installer->install(['select2']);

  // Update the field instances.
  $update_field_config = [
    'field_landing_page_summary' => [
      'description' => t('Add short summary to introduce your news story. This summary will display on promotional cards or a card carousel.'),
    ],
    'field_news_date' => [
      'description' => t('Date of the news being written.'),
    ],
    'field_featured_image' => [
      'description' => t("Feature images appear on your news story below the Date. One image can be added and must be 496px high x 818px wide."),
    ],
    'field_location' => [
      'description' => t('Tag your news story with a Victorian region, if relevant.'),
    ],
    'field_related_links' => [
      'description' => '',
    ],
    'field_show_related_content' => [
      'label' => t('Show related links?'),
      'description' => t('Check this box if you want to show related links for this page.'),
    ],
    'field_show_social_sharing' => [
      'label' => t('Social sharing'),
      'required' => TRUE,
      'description' => t('The social sharing box can be hidden in special circumstances.'),
    ],
    'field_show_content_rating' => [
      'label' => t('Show content rating?'),
      'description' => t("Show 'Was this page helpful?' feedback form. Do not uncheck this form without admin approval."),
    ],
  ];
  foreach ($update_field_config as $field_name => $replacements) {
    /** @var \Drupal\Core\Field\FieldConfigInterface $field_config */
    $field_config = FieldConfig::loadByName('node', 'news', $field_name);
    if ($field_config) {
      $config = $field_config->toArray();
      $config = array_replace_recursive($config, $replacements);
      /** @var \Drupal\Core\Field\FieldConfigInterface $new_field_config */
      $new_field_config = FieldConfig::create($config);
      $new_field_config->original = $field_config;
      $new_field_config->enforceIsNew(FALSE);
      $new_field_config->save();
    }
  }

  /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display */
  $form_display = EntityFormDisplay::load('node.news.default');
  if (!$form_display) {
    return;
  }

  // Update field widgets.
  $update_field_widgets = [
    // Header.
    'title' => 0,
    'field_landing_page_summary' => 10,
    'field_news_intro_text' => 20,
    // Featured image.
    'field_featured_image' => [
      'settings' => ['open' => TRUE],
      'weight' => -90,
    ],
    // News content.
    'field_news_date' => 0,
    'body' => 10,
    // Author detail.
    'field_location' => [
      'weight' => 0,
    ],
    'field_node_department' => [
      'weight' => 10,
    ],
    // Sidebar.
    'field_show_related_content' => 0,
    'field_related_links' => [
      'type' => 'entity_reference_paragraphs',
      'settings' => [
        'title' => t('Link'),
        'title_plural' => t('Links'),
        'edit_mode' => 'closed',
        'add_mode' => 'button',
        'form_display_mode' => 'default',
        'default_paragraph_type' => '_none',
      ],
    ],
    // Sidebar - Contact.
    'field_landing_page_show_contact' => 0,
    'field_landing_page_contact' => 10,
    // Sidebar.
    'field_show_social_sharing' => [
      'type' => 'options_buttons',
      'weight' => 30,
    ],
    // General.
    'field_show_content_rating' => ['weight' => 0],
  ];

  // Use Select2 for Location and Department field.
  if (\Drupal::moduleHandler()->moduleExists('select2')) {
    foreach (['field_location', 'field_node_department'] as $select2_field) {
      $update_field_widgets[$select2_field]['type'] = 'select2_entity_reference';
      $update_field_widgets[$select2_field]['settings'] = [
        'match_operator' => 'CONTAINS',
        'match_limit' => 10,
        'autocomplete' => FALSE,
        'width' => '100%',
      ];
    }
  }

  foreach ($update_field_widgets as $field => $replacements) {
    $component = $form_display->getComponent($field);
    if ($component) {
      if (is_int($replacements)) {
        $replacements = ['weight' => $replacements];
      }
      $component = array_replace_recursive($component, $replacements);
      $form_display->setComponent($field, $component);
    }
  }

  // Update the field groups.
  $field_group = $form_display->getThirdPartySettings('field_group');

  // Header tabs.
  $field_group['group_section_header'] = _tide_news_new_field_group_tabs('Header Section', 'horizontal', 'node-form-group-header-section', '', 'content', -100, '', ['group_header']);
  $field_group['group_header'] = _tide_news_new_field_group_tab('Header', 'group_section_header', [], 'content', -99);
  $field_group['group_header']['children'] = [
    'title',
    'field_landing_page_summary',
    'field_news_intro_text',
  ];

  // News content tabs.
  $field_group['group_section_content'] = _tide_news_new_field_group_tabs('Content Section', 'horizontal', 'node-form-group-content-section', '', 'content', -80);
  $field_group['group_section_content']['children'] = [
    'group_content',
    'group_author_detail',
  ];

  $field_group['group_content'] = _tide_news_new_field_group_tab('News content', 'group_section_content', [], 'content', -79);
  $field_group['group_content']['children'] = [
    'field_news_date',
    'body',
  ];

  $field_group['group_author_detail'] = _tide_news_new_field_group_tab('Author detail', 'group_section_content', [], 'content', -78);
  $field_group['group_author_detail']['children'] = [
    'field_location',
    'field_node_department',
  ];

  // Sidebar tabs.
  $field_group['group_section_sidebar'] = _tide_news_new_field_group_tabs('Sidebar Section', 'horizontal', 'node-form-group-sidebar-section', '', 'content', -60, '', ['group_sidebar']);
  $field_group['group_sidebar'] = _tide_news_new_field_group_tab('Sidebar', 'group_section_sidebar', [], 'content', -61);
  $field_group['group_sidebar']['children'] = [
    'group_related_links',
    'group_contact_us',
    'field_show_social_sharing',
  ];

  $field_group['group_contact_us'] = _tide_news_new_field_group('Contact', 'details', [
    'id' => '',
    'classes' => '',
    'formatter' => 'closed',
    'description' => t('Specific contact details - name, address, phone, email can be added in a block to the sidebar.'),
    'required_fields' => FALSE,
    'open' => FALSE,
  ], 'content', 20, 'group_sidebar', []);
  $field_group['group_contact_us']['children'] = [
    'field_landing_page_show_contact',
    'field_landing_page_contact',
  ];

  if (isset($field_group['group_related_links'])) {
    $field_group['group_related_links'] = array_replace_recursive($field_group['group_related_links'], [
      'format_type' => 'details',
      'format_settings' => [
        'open' => FALSE,
        'description' => t('Related pages can be linked from this sidebar.'),
      ],
      'parent_name' => 'group_sidebar',
      'region' => 'content',
      'weight' => 10,
    ]);
  }

  foreach ($field_group as $group_name => $group_settings) {
    $form_display->setThirdPartySetting('field_group', $group_name, $group_settings);
  }

  // Removes unused groups.
  $unused_groups = [
    'group_right_column',
    'group_other',
  ];
  foreach ($unused_groups as $group_name) {
    unset($field_group[$group_name]);
    $form_display->unsetThirdPartySetting('field_group', $group_name);
  }

  $form_display->save();
}
